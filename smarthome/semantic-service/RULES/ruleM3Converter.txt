@prefix rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
@prefix rdfs: http://www.w3.org/2000/01/rdf-schema#
@prefix xsd: http://www.w3.org/2001/XMLSchema#
@prefix m3: http://sensormeasurement.appspot.com/m3#

################################################################ GNU License ######################################################################
#
#	Machine to Machine Measurement (M3) Framework 
#    Copyright(c) 2012 - 2015 Eurecom
#
#    M3 is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#
#    M3 is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with M3. The full GNU General Public License is 
#    included in this distribution in the file called "COPYING". If not, 
#    see <http://www.gnu.org/licenses/>.
#
#    Contact Information
#    M3 : gyrard__at__eurecom.fr, bonnet__at__eurecom.fr, karima.boudaoud__at__unice.fr
#  
#	The M3 framework has been designed and implemented during Amelie Gyrard's thesis.
#	She is a PhD student at Eurecom under the supervision of Prof. Christian Bonnet (Eurecom) and Dr. Karima Boudaoud (I3S-CNRS/University of Nice Sophia Antipolis).
#	This work is supported by the Com4Innov platform of the Pole SCS and DataTweet (ANR-13-INFR-0008). 
#  
#  	Address: Eurecom, Campus SophiaTech, 450 Route des Chappes, CS 50193 - 06904 Biot Sophia Antipolis cedex, FRANCE



#[DegreeCelsiusUnit: (?measurementUri m3:hasUnit m3:DegreeCelsius)
#              <-
#              (?measurementUri m3:hasUnit "Cel")
#]

[FogLamp: (?measurementUri rdf:type m3:FogLamp)
              <-
              (?measurementUri m3:hasName "fog lamp")
]

[BodyTemperature: (?measurementUri rdf:type m3:BodyTemperature)
              <-
              (?measurementUri m3:hasName "temperature")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:health)
]

[BodyTemperature: (?measurementUri rdf:type m3:BodyTemperature)
              <-
              (?measurementUri m3:hasName "BodyTemperature")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:health)
]
        
[WeatherTemperature: (?measurementUri rdf:type m3:WeatherTemperature)
              <-
              (?measurementUri m3:hasName "temperature")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:weather)
]

[WeatherTemperature: (?measurementUri rdf:type m3:WeatherTemperature)
              <-
              (?measurementUri m3:hasName "temperature")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:environment)
]

[RoomTemperature: (?measurementUri rdf:type m3:RoomTemperature)
              <-
              (?measurementUri m3:hasName "temperature")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:home)
]
[Food: (?measurementUri rdf:type m3:Food)
              <-
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:kitchen)
]

[Location: (?measurementUri rdf:type m3:Location)
              <-
              (?measurementUri m3:hasName "lon")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:place)
]

[Location: (?measurementUri rdf:type m3:Location)
              <-
              (?measurementUri m3:hasName "lat")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:place)
]

[Location: (?measurementUri rdf:type m3:Location)
              <-
              (?measurementUri m3:hasName "lon")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:Place)
]

[Location: (?measurementUri rdf:type m3:Location)
              <-
              (?measurementUri m3:hasName "lat")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:Place)
]

[Humidity: (?measurementUri rdf:type m3:Humidity)
              <-
              (?measurementUri m3:hasName "humidity")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:home)
]

[Humidity: (?measurementUri rdf:type m3:Humidity)
              <-
              (?measurementUri m3:hasName "Humidity")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:home)
]

[Presence: (?measurementUri rdf:type m3:Presence)
              <-
              (?measurementUri m3:hasName "presence")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:home)
]

[CloudCover: (?measurementUri rdf:type m3:CloudCover)
              <-
              (?measurementUri m3:hasName "CloudCover")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:home)
]

[Illuminance: (?measurementUri rdf:type m3:Illuminance)
              <-
              (?measurementUri m3:hasName "light")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:home)
]

[WeatherLuminosity: (?measurementUri rdf:type m3:WeatherLuminosity)
              <-
              (?measurementUri m3:hasName "luminosity")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:weather)
]

[BuildingLuminosity: (?measurementUri rdf:type m3:BuildingLuminosity)
              <-
              (?measurementUri m3:hasName "luminosity")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:home)
]

[Sound: (?measurementUri rdf:type m3:Sound)
              <-
              (?measurementUri m3:hasName "sound")
              (?sensor m3:produces ?measurementUri)
]


[Cholesterol: (?measurementUri rdf:type m3:Cholesterol)
              <-
              (?measurementUri m3:hasName "cholesterol")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:health)
]

[WindSpeed: (?measurementUri rdf:type m3:WindSpeed)
              <-
              (?measurementUri m3:hasName "wind speed")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:weather)
]

[WindSpeed: (?measurementUri rdf:type m3:WindSpeed)
              <-
              (?measurementUri m3:hasName "WindSpeed")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:weather)
]

[WindDirection: (?measurementUri rdf:type m3:WindDirection)
              <-
              (?measurementUri m3:hasName "WindDirection")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:weather)
]

[Precipitation: (?measurementUri rdf:type m3:Precipitation)
              <-
              (?measurementUri m3:hasName "precipitation")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:weather)
]

[Precipitation: (?measurementUri rdf:type m3:Precipitation)
              <-
              (?measurementUri m3:hasName "Precipitation")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:weather)
]

[HeartBeat: (?measurementUri rdf:type m3:HeartBeat)
              <-
              (?measurementUri m3:hasName "heart beat")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:health)
]

[HeartBeat: (?measurementUri rdf:type m3:HeartBeat)
              <-
              (?measurementUri m3:hasName "HeartBeat")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:health)
]

[Glucose: (?measurementUri rdf:type m3:Glucose)
              <-
              (?measurementUri m3:hasName "glucose")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:health)
]

[HeartBeat: (?measurementUri rdf:type m3:HeartBeat)
              <-
              (?measurementUri m3:hasName "heartbeat")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:health)
]

[HearRate: (?measurementUri rdf:type m3:HeartBeat)
              <-
              (?measurementUri m3:hasName "heart rate")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:health)
]

[SkinConductance: (?measurementUri rdf:type m3:SkinConductance)
              <-
              (?measurementUri m3:hasName "skin conductance")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:health)
]

[BloodPressure: (?measurementUri rdf:type m3:BloodPressure)
              <-
              (?measurementUri m3:hasName "blood pressure")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:health)
]

[BloodPressure: (?measurementUri rdf:type m3:BloodPressure)
              <-
              (?measurementUri m3:hasName "BloodPressure")
              (?sensor m3:produces ?measurementUri)
              (?sensor m3:observes m3:health)
]


   